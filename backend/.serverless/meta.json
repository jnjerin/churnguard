{
  "C:\\Users\\HP\\Technical Projects\\hackathons\\churnguard\\backend\\serverless.yml": {
    "versionFramework": "4.17.1",
    "servicePath": "C:\\Users\\HP\\Technical Projects\\hackathons\\churnguard\\backend\\serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "hersys",
      "service": "churnguard-api",
      "provider": {
        "name": "aws",
        "runtime": "python3.12",
        "region": "us-east-1",
        "stage": "dev",
        "environment": {
          "DYNAMODB_TABLE_CONVERSATIONS": "churnguard-api-conversations-dev",
          "DYNAMODB_TABLE_MESSAGES": "churnguard-api-messages-dev",
          "DYNAMODB_TABLE_OFFERS": "churnguard-api-offers-dev",
          "OPENAI_API_KEY": "<REDACTED>"
        },
        "iam": {
          "role": {
            "statements": [
              {
                "Effect": "Allow",
                "Action": [
                  "logs:*",
                  "lambda:*",
                  "dynamodb:*",
                  "iam:PassRole",
                  "dynamodb:Query",
                  "dynamodb:Scan",
                  "dynamodb:GetItem",
                  "dynamodb:PutItem",
                  "dynamodb:UpdateItem",
                  "dynamodb:DeleteItem"
                ],
                "Resource": [
                  "*",
                  "arn:aws:dynamodb:us-east-1:*:table/churnguard-api-conversations-dev",
                  "arn:aws:dynamodb:us-east-1:*:table/churnguard-api-messages-dev",
                  "arn:aws:dynamodb:us-east-1:*:table/churnguard-api-offers-dev",
                  "arn:aws:dynamodb:us-east-1:*:table/churnguard-api-conversations-dev/index/*",
                  "arn:aws:dynamodb:us-east-1:*:table/churnguard-api-messages-dev/index/*"
                ]
              }
            ]
          }
        },
        "versionFunctions": true
      },
      "functions": {
        "hello": {
          "handler": "handler.hello",
          "events": [
            {
              "httpApi": {
                "path": "/hello",
                "method": "get"
              },
              "resolvedMethod": "GET",
              "resolvedPath": "/hello"
            }
          ],
          "name": "churnguard-api-dev-hello"
        }
      },
      "custom": {
        "pythonRequirements": {
          "dockerizePip": "non-linux"
        }
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.12",
      "region": "us-east-1",
      "stage": "dev",
      "environment": {
        "DYNAMODB_TABLE_CONVERSATIONS": "churnguard-api-conversations-dev",
        "DYNAMODB_TABLE_MESSAGES": "churnguard-api-messages-dev",
        "DYNAMODB_TABLE_OFFERS": "churnguard-api-offers-dev",
        "OPENAI_API_KEY": "<REDACTED>"
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "logs:*",
                "lambda:*",
                "dynamodb:*",
                "iam:PassRole",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Resource": [
                "*",
                "arn:aws:dynamodb:us-east-1:*:table/churnguard-api-conversations-dev",
                "arn:aws:dynamodb:us-east-1:*:table/churnguard-api-messages-dev",
                "arn:aws:dynamodb:us-east-1:*:table/churnguard-api-offers-dev",
                "arn:aws:dynamodb:us-east-1:*:table/churnguard-api-conversations-dev/index/*",
                "arn:aws:dynamodb:us-east-1:*:table/churnguard-api-messages-dev/index/*"
              ]
            }
          ]
        }
      },
      "versionFunctions": true
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "serviceRawFile": "# \"org\" ensures this Service is used with the correct Serverless Framework Access Key.\norg: hersys\n# \"service\" is the name of this project. This will also be added to your AWS resource names.\nservice: churnguard-api\n\n# provider:\n#   name: aws\n#   runtime: python3.12\n\n# functions:\n#   hello:\n#     handler: handler.hello\n#     events:\n#       - httpApi:\n#           path: /\n#           method: get\n\n\nprovider:\n  name: aws\n  runtime: python3.12\n  region: us-east-1\n  stage: ${opt:stage, 'dev'}\n  \n  # Environment variables for all functions\n  environment:\n    DYNAMODB_TABLE_CONVERSATIONS: ${self:service}-conversations-${self:provider.stage}\n    DYNAMODB_TABLE_MESSAGES: ${self:service}-messages-${self:provider.stage}\n    DYNAMODB_TABLE_OFFERS: ${self:service}-offers-${self:provider.stage}\n    OPENAI_API_KEY: ${env:OPENAI_API_KEY}\n    \n  # IAM permissions\n  iam:\n    role:\n      statements:\n        - Effect: Allow\n          Action:\n            - logs:*\n            - lambda:*\n            - dynamodb:*\n            - iam:PassRole\n            - dynamodb:Query\n            - dynamodb:Scan\n            - dynamodb:GetItem\n            - dynamodb:PutItem\n            - dynamodb:UpdateItem\n            - dynamodb:DeleteItem\n          Resource:\n            - \"*\"\n            - \"arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_CONVERSATIONS}\"\n            - \"arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_MESSAGES}\"\n            - \"arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_OFFERS}\"\n            - \"arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_CONVERSATIONS}/index/*\"\n            - \"arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_MESSAGES}/index/*\"\n\n\n# Placeholder Lambda Function before we set up the real functions\nfunctions:\n  hello:\n    handler: handler.hello\n    events:\n      - httpApi:\n          path: /hello\n          method: get\n\n# # Lambda Functions\n# functions:\n#   startConversation:\n#     handler: functions/start_conversation.handler\n#     events:\n#       - http:\n#           path: conversations/start\n#           method: post\n#           cors: true\n          \n#   sendMessage:\n#     handler: functions/send_message.handler\n#     events:\n#       - http:\n#           path: conversations/message\n#           method: post\n#           cors: true\n          \n#   handleOffer:\n#     handler: functions/handle_offer.handler\n#     events:\n#       - http:\n#           path: conversations/offer-action\n#           method: post\n#           cors: true\n          \n#   getConversation:\n#     handler: functions/get_conversation.handler\n#     events:\n#       - http:\n#           path: conversations/{id}\n#           method: get\n#           cors: true\n\n# # DynamoDB Tables\n# resources:\n#   Resources:\n#     ConversationsTable:\n#       Type: AWS::DynamoDB::Table\n#       Properties:\n#         TableName: ${self:provider.environment.DYNAMODB_TABLE_CONVERSATIONS}\n#         BillingMode: PAY_PER_REQUEST\n#         AttributeDefinitions:\n#           - AttributeName: id\n#             AttributeType: S\n#           - AttributeName: userId\n#             AttributeType: S\n#         KeySchema:\n#           - AttributeName: id\n#             KeyType: HASH\n#         GlobalSecondaryIndexes:\n#           - IndexName: UserIdIndex\n#             KeySchema:\n#               - AttributeName: userId\n#                 KeyType: HASH\n#             Projection:\n#               ProjectionType: ALL\n              \n#     MessagesTable:\n#       Type: AWS::DynamoDB::Table\n#       Properties:\n#         TableName: ${self:provider.environment.DYNAMODB_TABLE_MESSAGES}\n#         BillingMode: PAY_PER_REQUEST\n#         AttributeDefinitions:\n#           - AttributeName: id\n#             AttributeType: S\n#           - AttributeName: conversationId\n#             AttributeType: S\n#           - AttributeName: timestamp\n#             AttributeType: S\n#         KeySchema:\n#           - AttributeName: id\n#             KeyType: HASH\n#         GlobalSecondaryIndexes:\n#           - IndexName: ConversationIdIndex\n#             KeySchema:\n#               - AttributeName: conversationId\n#                 KeyType: HASH\n#               - AttributeName: timestamp\n#                 KeyType: RANGE\n#             Projection:\n#               ProjectionType: ALL\n              \n#     OffersTable:\n#       Type: AWS::DynamoDB::Table\n#       Properties:\n#         TableName: ${self:provider.environment.DYNAMODB_TABLE_OFFERS}\n#         BillingMode: PAY_PER_REQUEST\n#         AttributeDefinitions:\n#           - AttributeName: id\n#             AttributeType: S\n#           - AttributeName: conversationId\n#             AttributeType: S\n#         KeySchema:\n#           - AttributeName: id\n#             KeyType: HASH\n#         GlobalSecondaryIndexes:\n#           - IndexName: ConversationIdIndex\n#             KeySchema:\n#               - AttributeName: conversationId\n#                 KeyType: HASH\n#             Projection:\n#               ProjectionType: ALL\n\n# Plugins\n# plugins:\n#   - serverless-python-requirements\n\n# Custom configuration\ncustom:\n  pythonRequirements:\n    dockerizePip: non-linux\n\n",
    "command": [
      "info"
    ],
    "options": {},
    "orgId": "b72c7fd0-32d6-4105-a4d1-befb25432caa",
    "orgName": "hersys",
    "userId": "MFxFs6fZWw1BrmD09Y",
    "userName": "hersys",
    "serviceProviderAwsAccountId": "514294711228",
    "serviceProviderAwsCfStackName": "churnguard-api-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:514294711228:stack/churnguard-api-dev/9d363e30-55fd-11f0-a1db-120b2abad785",
    "serviceProviderAwsCfStackCreated": "2025-06-30T22:00:20.233Z",
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": "CREATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "HelloLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:514294711228:function:churnguard-api-dev-hello:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-churnguard-api-dev-HelloLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "HttpApiId",
        "OutputValue": "hfzcqg8aug",
        "Description": "Id of the HTTP API",
        "ExportName": "sls-churnguard-api-dev-HttpApiId"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-1-9668e9b0-61a4",
        "ExportName": "sls-churnguard-api-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "HttpApiUrl",
        "OutputValue": "https://hfzcqg8aug.execute-api.us-east-1.amazonaws.com",
        "Description": "URL of the HTTP API",
        "ExportName": "sls-churnguard-api-dev-HttpApiUrl"
      }
    ]
  }
}